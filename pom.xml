<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mrathena</groupId>
	<artifactId>spring.boot.start</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>spring.boot.start</name>
	<description>Start Demo Project For Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
	
		<!-- Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- 官方推荐的模板引擎thymeleaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- 补充thymeleaf, 支持[data:foo="${'bar'}"]转换成[data-foo="bar"], 简写[th:attr="data-foo=${'bar'}"] -->
		<!-- 需要在启动类Application中添加如下Bean
			@Bean
			public DataAttributeDialect getDataAttributeDialect() {
			    return new DataAttributeDialect();
			}
		 -->
		<dependency>
			<groupId>com.github.mxab.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-data-attribute</artifactId>
			<!-- <version>2.0.1</version> -->
		</dependency>
		
		<!-- MyBatis, HikariCP, MySQL -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>com.mrathena</groupId>
			<artifactId>mybatis-generator-core-adjust</artifactId>
			<version>1.3.5</version>
		</dependency>
		
		<!-- 
		devtools可以实现:
		页面热部署(修改页面-保存,应用不会重启,但会重新加载页面,在application.properties文件中配置spring.thymeleaf.cache=false)
		类文件热部署(修改类-保存,应用会重启)
		属性文件热部署(修改配置文件-保存,应用会重启)
		即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的
		maven中的optional=true表示依赖不会传递。即此处引用的devtools不会传递到依赖该项目的项目中。
		仅仅加入devtools在我们的eclipse中还不起作用，这时候还需要对之前添加的spring-boot-maven-plugin做一些修改，如下：
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional><!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入 -->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork><!-- 如果没有该项配置,devtools不会起作用,即应用不会restart -->
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
